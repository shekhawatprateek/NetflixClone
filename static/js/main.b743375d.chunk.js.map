{"version":3,"sources":["axios.js","Row.js","requests.js","Banner.js","Nav.js","App.js","reportWebVitals.js","index.js"],"names":["instance","axios","create","baseURL","Row","title","fetchUrl","isLargeRow","useState","movies","setMovies","trailerUrl","setTrailerUrl","useEffect","a","get","request","data","results","fetchData","className","map","movie","onClick","movieTrailer","name","original_name","then","url","urlParams","URLSearchParams","URL","search","catch","error","console","log","handleClick","src","poster_path","backdrop_path","alt","id","videoId","opts","height","width","playerVars","autoplay","require","config","api_key","process","requests","fetchTrending","fetchNetflixOrignals","fetchTopRated","fetchActionMovies","fetchComedyMovies","fetchHorrorMovies","fetchRomanceMovies","fetchDocumentaries","Banner","str","n","setMovie","Math","floor","random","length","style","backgroundSize","backgroundImage","backgroundPosition","orignal_name","overview","substr","Nav","show","handleShow","window","addEventListener","scrollY","removeEventListener","App","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.b743375d.chunk.js","sourcesContent":["import axios from \"axios\";\r\n\r\n// Create an axios instance \r\nconst instance = axios.create({\r\n    baseURL: \"https://api.themoviedb.org/3\"\r\n})\r\n\r\nexport default instance;","import React, { useState, useEffect } from \"react\";\r\nimport axios from \"./axios\";\r\nimport \"./Row.css\";\r\n// import requests from \"./requests\";\r\nimport YouTube from \"react-youtube\";\r\nimport movieTrailer from \"movie-trailer\";\r\n\r\nconst base_url = \"https://image.tmdb.org/t/p/original/\";\r\n\r\nfunction Row({ title, fetchUrl, isLargeRow }) {\r\n  const [movies, setMovies] = useState([]);\r\n  const [trailerUrl, setTrailerUrl] = useState(\"\");\r\n\r\n  // A snippet of code runs on a specific condition/variable\r\n  useEffect(() => {\r\n    async function fetchData() {\r\n      const request = await axios.get(fetchUrl);\r\n      setMovies(request.data.results);\r\n      return request;\r\n    }\r\n    fetchData();\r\n  }, [fetchUrl]);\r\n  // Youtube Code\r\n  const opts = {\r\n    height: \"390\",\r\n    width: \"100%\",\r\n    playerVars: {\r\n      // https://developers.google.com/youtube/player_parameters\r\n      autoplay: 1,\r\n    },\r\n  };\r\n\r\n  const handleClick = (movie) => {\r\n    if (trailerUrl) {\r\n      setTrailerUrl(\"\");\r\n    } else {\r\n      movieTrailer(movie?.title || movie?.name || movie?.original_name || \" \")\r\n        .then((url) => {\r\n          const urlParams = new URLSearchParams(new URL(url).search);\r\n\r\n          setTrailerUrl(urlParams.get(\"v\"));\r\n        })\r\n        .catch((error) => console.log(error));\r\n    }\r\n  };\r\n\r\n  // console.log(movies);\r\n  return (\r\n    <div className=\"row\">\r\n      <h2>{title}</h2>\r\n\r\n      <div className=\"row__posters\">\r\n        {/* serveral row posters  */}\r\n\r\n        {movies.map((movie) => (\r\n          <img\r\n            key={movie.id}\r\n            onClick={() => handleClick(movie)}\r\n            className={`row__poster ${isLargeRow && \"row__posterLarge\"}`}\r\n            src={`${base_url}${\r\n              isLargeRow ? movie.poster_path : movie.backdrop_path\r\n            }`}\r\n            alt={movie.name}\r\n          />\r\n        ))}\r\n      </div>\r\n      {trailerUrl && <YouTube videoId={trailerUrl} opts={opts} />}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Row;\r\n","require(\"dotenv\").config();\r\nconst api_key = process.env.REACT_APP_API_KEY;\r\n\r\nconst requests = {\r\n  fetchTrending: `/trending/all/week?api_key=${api_key}&language=en-US`,\r\n  fetchNetflixOrignals: `/discover/tv?api_key=${api_key}&with_networks=213`,\r\n  fetchTopRated: `/movie/top_rated?api_key=${api_key}&language=en-US`,\r\n  fetchActionMovies: `/discover/movie?api_key=${api_key}&with_genres=28`,\r\n  fetchComedyMovies: `/discover/movie?api_key=${api_key}&with_genres=35`,\r\n  fetchHorrorMovies: `/discover/movie?api_key=${api_key}&with_genres=27`,\r\n  fetchRomanceMovies: `/discover/movie?api_key=${api_key}&with_genres=10749`,\r\n  fetchDocumentaries: `/discover/movie?api_key=${api_key}&with_genres=99`,\r\n};\r\n\r\nexport default requests;\r\n","import React, { useState, useEffect } from \"react\";\r\nimport axios from \"./axios\";\r\nimport requests from \"./requests\";\r\nimport \"./Banner.css\";\r\n\r\nfunction Banner() {\r\n  const [movie, setMovie] = useState([]);\r\n\r\n  useEffect(() => {\r\n    async function fetchData() {\r\n      const request = await axios.get(requests.fetchNetflixOrignals);\r\n      setMovie(\r\n        request.data.results[\r\n          Math.floor(Math.random() * request.data.results.length - 1)\r\n        ]\r\n      );\r\n    }\r\n    fetchData();\r\n  }, []);\r\n\r\n  // console.log(movie);\r\n\r\n  function truncate(str, n) {\r\n    return str?.length > n ? str.substr(0, n - 1) + \" ...\" : str;\r\n  }\r\n\r\n  return (\r\n    <header\r\n      className=\"banner\"\r\n      style={{\r\n        backgroundSize: \"cover\",\r\n        backgroundImage: `url(\r\n          \"https://image.tmdb.org/t/p/original/${movie?.backdrop_path}\"\r\n      )`,\r\n        backgroundPosition: \"center center\",\r\n      }}\r\n    >\r\n      <div className=\"banner__contents\">\r\n        <h1 className=\"banner__title\">\r\n          {movie?.title || movie?.name || movie?.orignal_name}\r\n        </h1>\r\n\r\n        <div className=\"banner_buttons\">\r\n          <button className=\"banner__button\">Play</button>\r\n          <button className=\"banner__button\">My List</button>\r\n        </div>\r\n\r\n        <h1 className=\"banner__description\">\r\n          {truncate(movie?.overview, 150)}\r\n        </h1>\r\n      </div>\r\n\r\n      <div className=\"banner--fadeBottom\"></div>\r\n    </header>\r\n  );\r\n}\r\n\r\nexport default Banner;\r\n","import React, { useEffect, useState } from \"react\";\r\nimport \"./Nav.css\";\r\n\r\nfunction Nav() {\r\n\r\n    const [show, handleShow] = useState(false)\r\n\r\n    useEffect(() => {\r\n        window.addEventListener('scroll', () => {\r\n            if(window.scrollY > 100) {\r\n                handleShow(true)\r\n            } else handleShow(false)\r\n        });\r\n        return () => {\r\n            window.removeEventListener('scroll')\r\n        }\r\n    }, [])\r\n\r\n  return (\r\n    <div className={`nav ${show && \"nav__black\"}`}>\r\n      <img\r\n        className=\"nav__logo\"\r\n        src=\"https://upload.wikimedia.org/wikipedia/commons/0/08/Netflix_2015_logo.svg\"\r\n        alt=\"Netflix Logo\"\r\n      />\r\n      <img\r\n        className=\"nav__avatar\"\r\n        src=\"https://upload.wikimedia.org/wikipedia/commons/0/0b/Netflix-avatar.png\"\r\n        alt=\"Netflix Avatar\"\r\n      />\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Nav;\r\n","import \"./App.css\";\nimport Row from \"./Row\";\nimport requests from \"./requests\";\nimport Banner from \"./Banner\";\nimport Nav from \"./Nav\";\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <Nav />\n\n      <Banner />\n\n      <Row\n        title={\"Netflix Orignals\"}\n        fetchUrl={requests.fetchNetflixOrignals}\n        isLargeRow\n      />\n      <Row title={\"Trending Now\"} fetchUrl={requests.fetchTrending} />\n      <Row title={\"Top Rated\"} fetchUrl={requests.fetchTopRated} />\n      <Row title={\"Action Movies\"} fetchUrl={requests.fetchActionMovies} />\n      <Row title={\"Comedy Movies\"} fetchUrl={requests.fetchComedyMovies} />\n      <Row title={\"Horror Movies\"} fetchUrl={requests.fetchHorrorMovies} />\n      <Row title={\"Romance Movies\"} fetchUrl={requests.fetchRomanceMovies} />\n      <Row title={\"Documentaries\"} fetchUrl={requests.fetchDocumentaries} />\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}